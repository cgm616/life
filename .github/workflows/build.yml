name: build-test-deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  fmt-and-clippy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        components: rustfmt, clippy
    - name: Install linux build deps
      run: sudo apt-get install libasound2-dev xorg-dev libgl1-mesa-glx
    - name: Rustfmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
    - name: Run clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: -- -D warnings
  
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        target: x86_64-unknown-linux-gnu
    - name: Install linux build deps
      run: sudo apt-get install libasound2-dev xorg-dev libgl1-mesa-glx
    - name: Run cargo check
      uses: actions-rs/cargo@v1
      with:
        command: check
    - name: Run cargo test
      uses: actions-rs/cargo@v1
      with:
        command: test
    
  build-and-deploy:
    needs: [fmt-and-clippy, test]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        target: wasm32-unknown-unknown
    - name: Install wasm-bindgen
      uses: jetli/wasm-bindgen-action@v0.1.0
      with:
        version: 'latest'
    - name: Install binaryen
      run: |
        set -e
        curl -L https://github.com/WebAssembly/binaryen/releases/download/1.39.1/binaryen-1.39.1-x86_64-linux.tar.gz | tar xzf -
        echo "`pwd`/binaryen-1.39.1" > $GITHUB_PATH
    - name: Build and run wasm-bindgen
      run: |
        ./build_wasm.sh main --release
    - name: Deploy
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        BRANCH: gh-pages # The branch the action should deploy to.
        FOLDER: web # The folder the action should deploy.
        CLEAN: true
        CLEAN_EXCLUDE: '["CNAME"]'
      if: github.event_name != 'pull_request'
